<?php

use App\Http\Controllers\api\AccountingController;
use App\Http\Controllers\api\AccReceivableEntryController;
use App\Http\Controllers\api\AcknowledgementReceiptController;
use App\Http\Controllers\Api\AreaCodeController;
use App\Http\Controllers\api\ASDController;
use App\Http\Controllers\Api\AuthController;
use App\Http\Controllers\api\BillingController;
use App\Http\Controllers\api\BillingReportController;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;
use App\Http\Controllers\Api\FeesController;
use App\Http\Controllers\Api\ConsumerController;
use App\Http\Controllers\Api\MeterRegController;
use App\Http\Controllers\Api\TownCodeController;
use App\Http\Controllers\Api\BillRatesController;
use App\Http\Controllers\api\CollectionReportsController;
use App\Http\Controllers\api\CollectionsController;
use App\Http\Controllers\Api\RouteCodeController;
use App\Http\Controllers\Api\MeterBrandController;
use App\Http\Controllers\Api\SubstationCodeController;
use App\Http\Controllers\Api\ConsumerTypeController;
use App\Http\Controllers\Api\FieldFindingController;
use App\Http\Controllers\Api\EmployeeMasterController;
use App\Http\Controllers\Api\EWalletController;
use App\Http\Controllers\Api\FeederCodeController;
use App\Http\Controllers\Api\ForExternalController;
use App\Http\Controllers\Api\LedgerController;
use App\Http\Controllers\Api\LifeLineRatesController;
use App\Http\Controllers\Api\MeterConditionController;
use App\Http\Controllers\Api\MeterMasterController;
use App\Http\Controllers\api\MeterReading;
use App\Http\Controllers\Api\PermissionController;
use App\Http\Controllers\Api\SalesController;
use App\Http\Controllers\Api\TransformerController;
use App\Http\Controllers\Api\PoleMasterController;
use App\Http\Controllers\Api\RoleController;
use App\Http\Controllers\Api\RolePermissionController;
use App\Http\Controllers\Api\PrintTellerDCRController;
use App\Http\Controllers\Api\ForTestController;
use App\Http\Controllers\ISDController;
use App\Models\Consumer;
use App\Http\Controllers\Api\AccountingCodeController;
use App\Http\Controllers\Api\AccountingCodeVoucherController;
use App\Http\Controllers\Api\FundController;
use App\Http\Controllers\Api\SignatoryController;
use App\Http\Controllers\Api\SignatoryTitleController;
use App\Http\Controllers\Api\VoucherController;
use App\Http\Controllers\Api\OnlineComController;
use App\Http\Controllers\Api\HrController;
use App\Http\Controllers\Api\ReadAndBillController;
use App\Http\Controllers\ToServerController;
// use Illuminate\Http\Request;

/*
|--------------------------------------------------------------------------
| API Routes
|--------------------------------------------------------------------------
|
| Here is where you can register API routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| is assigned the "api" middleware group. Enjoy building your API!
|
*/
require __DIR__ . '/api/rolePermission.php';
require __DIR__ . '/api/user.php';
require __DIR__ . '/api/consumer.php';
require __DIR__ . '/api/route.php';
require __DIR__ . '/api/consumerType.php';
require __DIR__ . '/api/meterMaster.php';
require __DIR__ . '/api/permission.php';
require __DIR__ . '/api/lifeline.php';
require __DIR__ . '/api/postingCollection.php';
require __DIR__ . '/api/sales.php';
require __DIR__ . '/api/meterBrand.php';
require __DIR__ . '/api/role.php';
require __DIR__ . '/api/server.php';
require __DIR__ . '/api/uploadCollectionToServer.php';
require __DIR__ . '/api/insertServer.php';
require __DIR__ . '/api/findDataToServer.php';
require __DIR__ . '/api/insertEwalletLogServer.php';
require __DIR__ . '/api/roleDelete.php';
require __DIR__ . '/api/powerbill_inquiry.php';
require __DIR__ . '/api/consumerTotalArrears.php';
require __DIR__ . '/api/getConsumerPrevReading.php';
require __DIR__ . '/api/gcash_consumer.php';

Route::get('v1/mrs_print', [ConsumerController::class, 'MRStoPDF'])->name('mrs.print');
// Route::get('v1/mrs_print/{routeID}/{date}', [ConsumerController::class, 'MRStoPDF'])->name('MRSpdf.convert');
Route::get('v1/substation', [SubstationCodeController::class, 'index']);
Route::post('v1/substation', [SubstationCodeController::class, 'store']);
Route::patch('v1/substation/{id}', [SubstationCodeController::class, 'update']);
Route::delete('v1/substation/{id}', [SubstationCodeController::class, 'destroy']);
Route::get('v1/substation/{request}', [SubstationCodeController::class, 'search']);
Route::get('v1/meter_condition', [MeterConditionController::class, 'index']);
Route::post('v1/meter_condition', [MeterConditionController::class, 'store']);
Route::patch('v1/meter_condition/{id}', [MeterConditionController::class, 'update']);
Route::delete('v1/meter_condition/{id}', [MeterConditionController::class, 'destroy']);
// Route::get('v1/town', [TownCodeController::class, 'index']);
// Route::get('v1/town/{request}', [TownCodeController::class, 'search']);
// Route::get('v1/town/{id}', [TownCodeController::class, 'show']);
// Route::post('v1/town', [TownCodeController::class, 'store']);
// Route::patch('v1/town/{id}', [TownCodeController::class, 'update']);
// Route::delete('v1/town/{id}', [TownCodeController::class, 'destroy']);
// Route::get('v1/town/area/{id}', [TownCodeController::class, 'showTowns']);
// Route::get('v1/town/area/{id}/search/{req}', [TownCodeController::class, 'searchByTownByAreaId']);
// Route::get('v1/route', [RouteCodeController::class, 'index']);
// Route::get('v1/route/{req}', [RouteCodeController::class, 'search']);
// Route::get('v1/route/town/{id}/search/{req}', [RouteCodeController::class, 'searchRouteByTownID']);
// Route::get('v1/route/town/{id}', [RouteCodeController::class, 'showRoutes']);
// Route::post('v1/route', [RouteCodeController::class, 'store']);
// Route::patch('v1/route/{id}', [RouteCodeController::class, 'update']);
Route::delete('v1/route/{id}', [RouteCodeController::class, 'destroy'])->name('delete.route');
Route::get('v1/meter_brand', [MeterBrandController::class, 'index']);
Route::post('v1/meter_brand', [MeterBrandController::class, 'store']);
Route::patch('v1/meter_brand/{id}', [MeterBrandController::class, 'update']);
Route::delete('v1/meter_brand/{id}', [MeterBrandController::class, 'destroy']);
Route::get('v1/meter_brand/{request}', [MeterBrandController::class, 'search']);
Route::get('v1/lifeline_rates/{kwh}', [LifeLineRatesController::class, 'getLifeline'])->name('get.getLifeline');
// Route::get('v1/lifeline_rates', [LifeLineRatesController::class, 'index']);
// Route::post('v1/lifeline_rates', [LifeLineRatesController::class, 'store']);
// Route::patch('v1/lifeline_rates/{id}', [LifeLineRatesController::class, 'update']);
// Route::delete('v1/lifeline_rates/{id}', [LifeLineRatesController::class, 'destroy']);
Route::get('v1/feeder/search/{request}', [FeederCodeController::class, 'search'])->name('search.feeder');
Route::get('v1/feeder/{substation}', [FeederCodeController::class, 'getFeeder'])->name('get.feeder');
Route::get('v1/feeder/substation/{id}/search/{req}', [FeederCodeController::class, 'searchFeederBySubID'])->name('search.feeder.by,sub.id');
Route::post('v1/feeder', [FeederCodeController::class, 'store'])->name('store.feeder');
Route::patch('v1/feeder/{id}', [FeederCodeController::class, 'update'])->name('update.feeder');
Route::delete('v1/feeder/{id}', [FeederCodeController::class, 'destroy'])->name('destroy.feeder');
Route::delete('v1/consumer_type/{id}', [ConsumerTypeController::class, 'destroy'])->name('delete.constype');
Route::get('v1/fees', [FeesController::class, 'index'])->name('index.fees');
Route::post('v1/fees', [FeesController::class, 'store'])->name('store.fees');
Route::patch('v1/fees/{id}', [FeesController::class, 'update'])->name('update.fees');
Route::get('v1/fees/{request}', [FeesController::class, 'search'])->name('search.fees');
Route::delete('v1/fees/{request}', [FeesController::class, 'destroy'])->name('delete.fees');
Route::post('v1/fees/summary', [FeesController::class, 'printSummNBCollection'])->name('print.collection.nonbill.summary');
Route::get('v1/billing_rates/print/rates/{bp}', [BillRatesController::class, 'getBillRatesBP'])->name('get.br.bp');
Route::get('v1/billing_rates/getRate/{consType}/{billPeriod}', [BillRatesController::class, 'getRate'])->name('get.rate');
Route::get('v1/billing_rates/preview/{id}', [BillRatesController::class, 'previewConsBR'])->name('preview.consumer.billrates');
Route::get('v1/billing_rates/{billingPeriod}', [BillRatesController::class, 'getBRByBillPeriod'])->name('get.billrate.billperiod');
Route::get('v1/billing_rates', [BillRatesController::class, 'getCurBRConsType'])->name('get.billrates.constype');
// Route::get('v1/billing_rates', [BillRatesController::class, 'index'])->name('index.billrates');
Route::get('v1/billing_rates/checkRate/{billPeriod}', [BillRatesController::class, 'checkRates'])->name('check.billrates');
Route::post('v1/billing_rates', [BillRatesController::class, 'store'])->name('store.billrates');
Route::patch('v1/billing_rates/{id}', [BillRatesController::class, 'update'])->name('update.billrates');
Route::delete('v1/billing_rates/{id}', [BillRatesController::class, 'destroy'])->name('delete.billrates');
Route::post('v1/billing_rates/printPB', [BillRatesController::class, 'printPowerBill'])->name('print.powerbill');
Route::post('v1/billing_rates/reprintPB', [BillRatesController::class, 'reprintPowerBill'])->name('reprint.powerbill');
Route::get('v1/mrs/{request}', [ConsumerController::class, 'getConsCountMeterRead'])->name('get.consumer.count.meter.read');
Route::get('v1/consumer/route/{id}', [ConsumerController::class, 'getRouteAccounts'])->name('get.route.accounts');
Route::get('v1/consumer/accounts', [ConsumerController::class, 'selectConsAcc'])->name('select.consumer.account');
Route::get('v1/consumer/cons_type_address/{id}', [ConsumerController::class, 'showConsTypeAddress'])->name('show.consumer.constype');
Route::get('v1/consumer', [ConsumerController::class, 'index'])->name('index.consumer');
Route::get('v1/town', [TownCodeController::class, 'index'])->name('index.town');
Route::get('v1/town/{request}', [TownCodeController::class, 'search'])->name('search.town');
Route::get('v1/town/{id}', [TownCodeController::class, 'show'])->name('show.town');
Route::post('v1/town', [TownCodeController::class, 'store'])->name('store.town');
Route::patch('v1/town/{id}', [TownCodeController::class, 'update'])->name('update.town');
Route::delete('v1/town/{id}', [TownCodeController::class, 'destroy'])->name('delete.town');
Route::get('v1/town/area/{id}', [TownCodeController::class, 'showTowns'])->name('show.towns');
Route::get('v1/town/area/{id}/search/{req}', [TownCodeController::class, 'searchByTownByAreaId'])->name('search.town.by.area.id');
Route::get('v1/route', [RouteCodeController::class, 'index'])->name('index.route');
Route::get('v1/route/{req}', [RouteCodeController::class, 'search'])->name('search.route');
Route::get('v1/route/town/{id}/search/{req}', [RouteCodeController::class, 'searchRouteByTownID'])->name('search.route.by.town.id');
Route::get('v1/route/town/{id}', [RouteCodeController::class, 'showRoutes'])->name('show.routes');
Route::post('v1/route', [RouteCodeController::class, 'store'])->name('store.route');
Route::patch('v1/route/{id}', [RouteCodeController::class, 'update'])->name('update.route');
// Route::delete('v1/route/{id}', [RouteCodeController::class, 'destroy'])->name('delete.route');
Route::post('v1/consumer', [ConsumerController::class, 'store'])->name('api.consumer.store');
Route::get('v1/consumer/{id}', [ConsumerController::class, 'show'])->name('show.consumer');
Route::delete('v1/consumer/{id}', [ConsumerController::class, 'destroy'])->name('delete.consumer');
Route::get('v1/consumer/listSOA/rcid/{rc_id}/bp/{billingPeriod}/mReader/{mReader}', [ConsumerController::class, 'showListSOA'])->name('show.soa.list');
Route::get('v1/consumer/acknRcptSOA/rcid/{rc_id}/bp/{billingPeriod}/mReader/{mReader}', [ConsumerController::class, 'consAcknRcptSOA'])->name('consumer.account.receipt.soa');
Route::get('v1/consumer/searchByName/{request}', [ConsumerController::class, 'searchConsByName'])->name('search.consumer.name.account');
Route::get('v1/meter_register/collection/{id}', [MeterRegController::class, 'showConsCollection'])->name('show.collection.consumer');
Route::get('v1/meter_register/collection/teller/{id}', [MeterRegController::class, 'showConsCollecionTransaction'])->name('show.collection.per.teller');
Route::get('v1/meter_register/disconDueID/{id}', [MeterRegController::class, 'showDisconDueDate'])->name('show.disconnect.due.date');
Route::get('v1/meter_register', [MeterRegController::class, 'index'])->name('index.meter.reg');
Route::post('v1/meter_register', [MeterRegController::class, 'showMRS'])->name('show.emr.consumers');
Route::post('v1/meter_register/bulkRead', [MeterRegController::class, 'bulkRead'])->name('bulk.read');
Route::get('v1/meter_register/getConsumerRecord/{mrid}', [MeterRegController::class, 'getRecords'])->name('get.consumer.record');
Route::post('v1/meter_register/computeRates', [MeterRegController::class, 'getComputation'])->name('compute.emr.rates');
Route::delete('v1/meter_register/cancelRead', [MeterRegController::class, 'cancelReading'])->name('cancel.emr');
Route::post('v1/meter_register/save', [MeterRegController::class, 'saveMRS'])->name('save.emr');
Route::post('v1/meter_register/update', [MeterRegController::class, 'updateMRS'])->name('update.emr');
Route::post('v1/meter_register/showAdjustPowerBill', [MeterRegController::class, 'showAdjustPowerBill'])->name('show.powerbill.adjustment');
Route::post('v1/meter_register/adjustPowerBill', [MeterRegController::class, 'adjustPowerBill'])->name('powerbill.adjustment');
Route::get('v1/field_finding', [FieldFindingController::class, 'index'])->name('index.fieldfinding');
Route::get('v1/field_finding/3MonthsAve/{cons_id}', [FieldFindingController::class, 'threeMonthsAve'])->name('average.3months');
Route::get('v1/field_finding/{request}', [FieldFindingController::class, 'search'])->name('search.fieldfinding');
Route::post('v1/field_finding', [FieldFindingController::class, 'store'])->name('store.fieldfinding');
Route::patch('v1/field_finding/{id}', [FieldFindingController::class, 'update'])->name('update.fieldfinding');
Route::delete('v1/field_finding/{id}', [FieldFindingController::class, 'destroy'])->name('delete.fieldfinding');
Route::get('v1/employee/meter_reader', [EmployeeMasterController::class, 'showMeterReader'])->name('show.meter.reader');
Route::get('v1/employee/teller', [EmployeeMasterController::class, 'showTellers'])->name('show.tellers');
Route::get('v1/employee/teller/search/{search}', [EmployeeMasterController::class, 'searchTellers'])->name('search.tellers');
Route::get('v1/employee/cashier', [EmployeeMasterController::class, 'showCashier'])->name('show.cashier');
Route::get('v1/employee', [EmployeeMasterController::class, 'index'])->name('index.employee');
Route::get('v1/employee/{id}', [EmployeeMasterController::class, 'show'])->name('show.employee');
Route::post('v1/sales/transact', [SalesController::class, 'payBills'])->name('pay.bills');
Route::post('v1/sales/transact/deposit', [SalesController::class, 'depositEwallet'])->name('deposit.ewallet');
Route::post('v1/sales/check/transact', [SalesController::class, 'checkPayBillsCutOff'])->name('check.pay.bills.CutOff');
Route::get('v1/sales', [SalesController::class, 'index'])->name('index.sales');
Route::get('v1/sales/{id}', [SalesController::class, 'show'])->name('show.sales');
Route::post('v1/sales/show/void/amount', [SalesController::class, 'showVoidAmount'])->name('show.void.amount');
Route::delete('v1/sales/void/collection', [SalesController::class, 'voidOR'])->name('void.or');
Route::post('v1/sales/check/officialReceipt', [SalesController::class, 'officialReceipt'])->name('check.sales.official.receipt');
Route::get('v1/area1', [AreaCodeController::class, 'index1'])->name('index.area1');
Route::get('v1/area', [AreaCodeController::class, 'index'])->name('index.area');
Route::get('v1/area/{id}', [AreaCodeController::class, 'show'])->name('show.area');
Route::patch('v1/area/{id}', [AreaCodeController::class, 'update'])->name('update.area');
Route::delete('v1/area/{id}', [AreaCodeController::class, 'destroy'])->name('delete.area');
Route::post('v1/area', [AreaCodeController::class, 'store'])->name('store.area');
Route::get('v1/transformer', [TransformerController::class, 'index'])->name('index.transformer');
Route::post('v1/transformer', [TransformerController::class, 'store'])->name('store.transformer');
Route::patch('v1/transformer/{id}', [TransformerController::class, 'update'])->name('update.transformer');
Route::delete('v1/transformer/{id}', [TransformerController::class, 'destroy'])->name('delete.transformer');
Route::get('v1/transformer/{request}', [TransformerController::class, 'search'])->name('search.transformer');
Route::get('v1/pole_master', [PoleMasterController::class, 'index'])->name('index.polemaster');
Route::post('v1/pole_master', [PoleMasterController::class, 'store'])->name('store.polemaster');
Route::patch('v1/pole_master/{id}', [PoleMasterController::class, 'update'])->name('update.polemaster');
Route::delete('v1/pole_master/{id}', [PoleMasterController::class, 'destroy'])->name('delete.polemaster');
Route::get('v1/pole_master/details/{id}', [PoleMasterController::class, 'getPoleDetails'])->name('get.polemaster');
Route::get('v1/meter_master', [MeterMasterController::class, 'index'])->name('index.meter_master');
Route::post('v1/meter_master', [MeterMasterController::class, 'store'])->name('api.meter.master.store');
Route::patch('v1/meter_master/{id}', [MeterMasterController::class, 'update'])->name('update.meter_master');
Route::delete('v1/meter_master/{id}', [MeterMasterController::class, 'destroy'])->name('delete.meter_master');
Route::get('v1/meter_master/{request}', [MeterMasterController::class, 'search'])->name('search.meter_master');
Route::get('v1/ledger/{cmid}', [LedgerController::class, 'showConsLedger'])->name('show.consumer.ledger');
Route::get('v1/ledgerOnline/{accountNo}', [LedgerController::class, 'showConsLedgerOnline'])->name('show.consumer.ledger.online');
// Route::get('v1/Consumer/ledger/print/{id}', [LedgerController::class, 'printConsLedger'])->name('print.consumer.ledger');
Route::get('v1/ledger/rates/{mrid}', [LedgerController::class, 'showConsLedgerRates'])->name('show.consumer.ledger.rates');
Route::get('v1/ewalletLog/{id}', [EWalletController::class, 'getEwallet'])->name('get.ewallet');
// Route::get('v1/print_dcr', [PrintTellerDCRController::class, 'index']);
Route::post('v1/collections/print/list/unposted', [CollectionsController::class, 'printlistOfUnposted'])->name('print.collection.list.unposted');
Route::post('v1/collections/print/summary/voided', [CollectionsController::class, 'printSummaryVoidedOR']);//no print available need sample
Route::post('v1/collections/print/summary/DCR', [CollectionsController::class, 'printSummaryDCRTeller'])->name('print.summary.dcr.teller');
Route::post('v1/collections/transfer/or', [CollectionsController::class, 'transferCollection'])->name('transfer.collection.or');
Route::post('v1/collections/total_amount/transfer/or', [CollectionsController::class, 'setTransferCollectionAmount'])->name('set.transfer.collection.amount');
Route::post('v1/collections/total_amount/summary/DCR', [CollectionsController::class, 'setSummaryDCRTellerTAmount'])->name('set.summary.dcr.teller.amount');
Route::post('v1/collections/total_amount/cashier/post', [CollectionsController::class, 'postCollection'])->name('post.collection.cashier');
Route::post('v1/collections/total_amount/cashier/post/amount', [CollectionsController::class, 'setpostCollectionAmount'])->name('set.post.collection.cashier.amount');
Route::delete('v1/collections/transaction/void/{or}/teller/{teller}/remark/{remark}', [CollectionsController::class, 'voidTransactionOR'])->name('void.collection.transaction.or');
Route::get('v1/collections/transaction/show/{teller}', [CollectionsController::class, 'showTransactionVoid'])->name('show.collection.transaction.teller');
Route::post('v1/collections/teller/print/dcr', [CollectionsController::class, 'printTellersDailyCollection'])->name('print.collection.teller.dcr');
Route::post('v1/collections/gcash/print/dcr', [CollectionsController::class, 'gcashCollectionReport'])->name('print.collection.gcash.dcr');
Route::post('v1/collections/teller/set/dcr/amount', [CollectionsController::class, 'setTellersDailyCollectionAmount'])->name('set.collection.teller.dcr.amount');
Route::get('v1/locate/consumer/or/{id}', [CollectionsController::class, 'locateOR'])->name('locate.consumer.or');
Route::post('v1/collections/cashier/dcr', [CollectionsController::class, 'cashierDCR'])->name('collection.dcr.cashier');
Route::post('v1/collections/cashier/dcr/total_collection', [CollectionsController::class, 'setAmountCashierDCR'])->name('set.collection.dcr.cashier.amount');
Route::post('v1/collections/teller/dcr/print/daily', [CollectionsController::class, 'printTellersDailyCollection'])->name('print.teller.daily.collection');
Route::post('v1/ackn_receipt/total_collection', [AcknowledgementReceiptController::class, 'setTotalCollectionAR'])->name('set.collection.total.ar');
Route::post('v1/ackn_receipt/change', [AcknowledgementReceiptController::class, 'changeAcknRecpt'])->name('update.ar');
Route::post('v1/ewallet/entry', [BillingController::class, 'eWalletEntry'])->name('ewallet.entry');
Route::get('v1/consumer/amount/bill/{id}/date/{date}', [BillingController::class, 'cancelBillingAmount'])->name('set.cancel.billing.amount');
Route::delete('v1/consumer/bill/{id}/date/{date}/user/{user_id}', [BillingController::class, 'cancelBilling'])->name('cancel.billing');
Route::get('v1/consumer/summary_bill/date/{date}', [BillingController::class, 'summOfCancelledBills'])->name('summary.cancel.bills');
Route::post('v1/consumer/accountable/amount', [AccReceivableEntryController::class, 'addAccRecEntry'])->name('store.account.receivable.entry');
Route::post('v1/reports/billing/generalDetail', [BillingReportController::class, 'generalDetailReport'])->name('report.general.detail');
Route::post('v1/reports/billing/generalSummary', [BillingReportController::class, 'genSummaryReport'])->name('report.general.summary');
Route::post('v1/reports/billing/summaryBills', [BillingReportController::class, 'summaryOfBills'])->name('reports.bill.summary');
Route::post('v1/reports/billing/consumerData', [BillingReportController::class, 'consumerDataReport'])->name('report.consumer.data');
Route::post('v1/reports/billing/advPBAppliedToBill', [BillingReportController::class, 'advancePBAppliedToBill'])->name('report.ewallet.applied.bill');
Route::get('v1/collections/teller/transact/list/{teller}', [CollectionsController::class, 'collectionList'])->name('collection.list');
Route::post('v1/reports/billing/powerSalesPerRoute', [BillingReportController::class, 'powerSalesPerRoute'])->name('report.powersales.per.route');
Route::post('v1/reports/billing/lifelineConsDetailed', [BillingReportController::class, 'lifelineConsDetailed'])->name('report.lifeline.consumer.detailed'); 
Route::post('v1/reports/billing/summaryConsPerKWHUsed', [BillingReportController::class, 'summaryConsPerKWHUsed'])->name('report.consumer.per.kwhused.summary');
Route::get('v1/reports/billing/summaryOfSalesCoverage/date/{date}', [BillingReportController::class, 'summaryOfSalesCoverage'])->name('report.sales.coverage.summary');
Route::post('v1/reports/billing/summaryOfBills/AmountIssued', [BillingReportController::class, 'summaryOfBillsAmountIssued'])->name('report.bill.amount.issued.summary'); 
Route::post('v1/reports/billing/lifelinePerArea', [BillingReportController::class, 'lifelinePerArea'])->name('report.lifeline.per.area'); 
Route::post('v1/reports/billing/lifelinePerTown', [BillingReportController::class, 'lifelinePerTown'])->name('report.lifeline.per.town'); 
Route::post('v1/reports/billing/lifelinePerRoute', [BillingReportController::class, 'lifelinePerRoute'])->name('report.lifeline.per.route'); 
Route::post('v1/reports/billing/summEnergySales', [BillingReportController::class, 'summEnergySales'])->name('report.energy.sales.summary');
Route::post('v1/reports/billing/lifelineConsDetailedPerRoute', [BillingReportController::class, 'lifelineConsDetailedPerRoutePerTown'])->name('report.lifeline.consumer.detailed.per.route.per.town');
Route::get('v1/reports/billing/consLargeLoad/date/{billPeriod}', [BillingReportController::class, 'consLargeLoad'])->name('report.consumer.largeload'); 
Route::post('v1/reports/billing/increaseConsumption', [BillingReportController::class, 'increaseConsumption'])->name('report.increase.consumption');
Route::post('v1/reports/billing/decreaseConsumption', [BillingReportController::class, 'decreaseConsumption'])->name('report.decrease.consumption');
Route::get('v1/reports/billing/customerSalesPerCharge/date/{date}', [BillingReportController::class, 'customerSalesPerCharge'])->name('report.sales.customer.per.charge');
Route::post('v1/reports/billing/aging', [BillingReportController::class, 'aging'])->name('reports.billing.aging');
Route::post('v1/reports/billing/salesPerTypeWithConsName', [BillingReportController::class, 'salesPerTypeWithConsName'])->name('report.sales.type.per.consumer.name');
Route::post('v1/reports/billing/summaryOfSalesUnbundled', [BillingReportController::class, 'summaryOfSalesUnbundled'])->name('report.sales.unbundled.summary');
Route::post('v1/reports/billing/summaryOfRevPerTown', [BillingReportController::class, 'summaryOfRevPerTown'])->name('report.revenue.per.town');
Route::post('v1/reports/billing/summaryOfRevPerConsType', [BillingReportController::class, 'summaryOfRevPerConsType'])->name('report.revenue.per.constype');
Route::get('v1/reports/billing/summaryBillAdjustment/datePeriod/{date_period}', [BillingReportController::class, 'summaryBillAdjustment'])->name('report.bill.adjustment.summary');
Route::get('v1/reports/billing/monthlySummAdj/date/{date_from}/{date_to}', [BillingReportController::class, 'monthlySummAdj'])->name('report.adjustment.monthly.summary'); 
Route::get('v1/reports/billing/summaryOfSalesPerConsType/date/{date}', [BillingReportController::class, 'summaryOfSalesPerConsType'])->name('report.sales.per.constype.summary');
Route::get('v1/reports/billing/monthlySummaryLifeline/date/{date}', [BillingReportController::class, 'monthlySummaryLifeline'])->name('report.lifeline.monthly.summary');
Route::post('v1/reports/billing/unreadUnbilledCons', [BillingReportController::class, 'unreadUnbilledCons'])->name('report.consumer.unbilled');
Route::post('v1/reports/billing/summBillAdjustDtl', [BillingReportController::class, 'summBillAdjustDtl'])->name('report.bill.adjustment.detailed.summary');
Route::post('v1/reports/collections/collectionPerTown', [CollectionReportsController::class, 'collectionPerTown'])->name('report.collection.per.town');
Route::post('v1/reports/Accounting/SummaryUniversalCharge', [AccountingController::class, 'SummaryUniversalCharge'])->name('report.universal.charge.summary');
Route::post('v1/reports/Accounting/vatSalesPerTown', [AccountingController::class, 'vatSalesPerTown'])->name('report.sales.vat.per.town');
Route::post('v1/reports/Accounting/vatSalesPerConstype', [AccountingController::class, 'vatSalesPerConstype'])->name('report.sales.vat.per.constype');
Route::post('v1/reports/Accounting/vatSalesCollectionFitAll', [AccountingController::class, 'vatSalesCollectionFitAll'])->name('report.collection.sales.fitall');
Route::get('v1/reports/Accounting/actualVat/{bp}', [AccountingController::class, 'actualVat'])->name('report.actual.vat');
Route::post('v1/reports/MeterReading/mrrInq1', [MeterReading::class, 'mrrInq1'])->name('report.meter.reading.inquiry.consumer');
Route::post('v1/reports/MeterReading/mrrInqCons2', [MeterReading::class, 'mrrInqCons2'])->name('report.meter.reading.inquiry.consumer2');
Route::post('v1/reports/MeterReading/meterReadingActivity', [MeterReading::class, 'meterReadingActivity'])->name('report.meter.reading.activity');
Route::post('v1/reports/ISD/delinquent', [ISDController::class, 'delinquent'])->name('report.isd.delinquent');
Route::post('v1/reports/ISD/promptPayor', [ISDController::class, 'promptPayor'])->name('report.isd.promptPayor');
Route::post('v1/ISD/renumberSequence', [ISDController::class, 'renumberSequence'])->name('set.seq.number');
Route::post('v1/ISD/list/disconnection', [ISDController::class, 'listDisco'])->name('list.disco');
Route::get('v1/sample', [BillingReportController::class, 'sample']);
Route::get('/v1/user/permissions',[PermissionController::class,'getPermission'])->name('get.permissions');
Route::post('/v1/billing/edit/list',[BillingController::class,'printEditBillList'])->name('print.edit.bill.list');
Route::post('v1/collections/posted/report', [CollectionsController::class, 'collectionPostedReport'])->name('collection.report.list');
Route::post('v1/ISD/MasterList', [ISDController::class, 'masterList'])->name('master.list');
Route::post('v1/ISD/change/constype', [ISDController::class, 'changeConsType'])->name('change.constype');
Route::post('v1/ISD/change/consMeter', [ISDController::class, 'changeConsMeter'])->name('change.cons.meter.mod');
Route::post('v1/ISD/consumer/list', [ISDController::class, 'consumerList'])->name('consumer.list');
Route::post('v1/ISD/change/status', [ISDController::class, 'changeStatus'])->name('change.status');
Route::post('v1/ISD/print/pending', [ISDController::class, 'printPending'])->name('print.pending');
Route::post('v1/ISD/report/new/consumer', [ISDController::class, 'newlyEnteredConsumerReport'])->name('new.consumer.report');
Route::post('v1/consumer/remarks', [ConsumerController::class, 'consNotify'])->name('consumer.notify');
Route::post('v1/ISD/print/list/notification', [ISDController::class, 'listConsNotified'])->name('list.consumer.notification');
Route::delete('v1/consumer/notification/{id}', [ConsumerController::class, 'removeNotified'])->name('delete.consumer.notification');
Route::post('v1/ASD/collection/powerbill/report', [ASDController::class, 'collectionReportPowerBill'])->name('collection.report.powerbill');
Route::post('v1/ASD/collection/nonbill/report', [ASDController::class, 'collectionReportNonBill'])->name('collection.report.nonbill');
Route::post('v1/ISD/collection/consumer/meter', [ISDController::class, 'consMeterSummary'])->name('summary.cons.meter');
Route::post('v1/ASD/collection/salesVsCollection/report', [ASDController::class, 'salesVsCollection'])->name('sales.vs.collection');
Route::post('v1/ewallet/consumer/consent/entry', [EWalletController::class, 'tagConsConsent'])->name('consumer.consent.entry');
Route::get('v1/ewallet/list/consumer/consent/{id}', [EWalletController::class, 'ewalletPayConsentList'])->name('list.consumer.consent');
Route::post('v1/ASD/collection/summary/perdate', [ASDController::class, 'collectionSummaryPerDate'])->name('collection.summary.per.date');
Route::get('v1/sample/rates', [ASDController::class, 'sampleRates']);
Route::post('v1/ASD/collection/reconnection', [ASDController::class, 'reconnection'])->name('collection.reconnection.report');
Route::get('v1/IT/server/uploaded/list', [CollectionsController::class, 'uploadedList'])->name('uploaded.list');
Route::post('v1/IT/server/uploaded/list/show', [CollectionsController::class, 'uploadedListShow'])->name('uploaded.list.show');
Route::post('v1/reports/accounting/monthly/dcr', [AccountingController::class, 'monthlyDCR'])->name('accounting.monthly.dcr');
Route::post('v1/accounting/cashier/dcr', [AccountingController::class, 'cashierDCRAcc'])->name('accounting.dcr.cashier');
Route::post('v1/ASD/collection/allbill/report', [ASDController::class, 'collectionReportAllBill'])->name('collection.report.allbill');
Route::post('v1/FSD/report/operating_revenue', [AccountingController::class, 'operatingRevenue'])->name('operating.revenue');
Route::post('v1/reports/accounting/collection/unbundled', [AccountingController::class, 'unbundledCollectionReport'])->name('report.collection.unbundled');
Route::post('v1/reports/collection/ar', [CollectionsController::class, 'collectionPerAR'])->name('report.collection.per.ar');
Route::post('v1/reports/collection/constype', [CollectionsController::class, 'collectionPerConstype'])->name('report.collection.per.constype');
Route::post('v1/Accounting/sales/close', [AccountingController::class, 'salesClosing'])->name('sales.closing');
Route::post('v1/reports/accounting/consumer/lgu/listing', [AccountingController::class, 'lguListing'])->name('report.accounting.lgu.list');
Route::post('v1/reports/accounting/consumer/bill_deposit', [AccountingController::class, 'billDeposit'])->name('report.accounting.bill.deposit');
Route::post('v1/Accounting/collection/vat', [AccountingController::class, 'collectionVat'])->name('collection.vat');
// Route::post('v1/user/check', [ForExternalController::class, 'checkUser'])->name('check.user');
Route::post('v1/user/check', [ForExternalController::class, 'checkUser'])->name('check.user');
Route::post('v1/consumer/status/update', [ConsumerController::class, 'consUpdateStatus'])->name('cons.update.status');
Route::post('v1/consumer/ledger/per_route', [LedgerController::class, 'printLedgerPerRoute'])->name('ledger.per.route');
Route::post('v1/collection/per/town', [ASDController::class, 'collectionForTheMonthPerTown'])->name('collection.month.per.town');
Route::post('v1/onetimepayment', [SalesController::class, 'onetimepayment'])->name('onetimepayment');
Route::post('v1/collection/by/billPeriod', [CollectionsController::class, 'collectionByBillPeriod'])->name('collection.by.bill.period');
Route::post('v1/collection/by/route', [CollectionsController::class, 'collectionRoute'])->name('collection.by.route');
Route::post('v1/kwh/thisYear', [MeterRegController::class, 'kwhThisYear'])->name('kwh.this.year');
Route::post('v1/consumer/online/register', [ConsumerController::class, 'ConsRegOnline'])->name('cons.register.online');
Route::post('v1/reports/collection/withNonbill/perdate', [AccountingController::class, 'CollectionWithNonBillPerDate'])->name('collection.withNonbill.perdate');
Route::post('v1/reports/collection/nonbill/penalty', [ASDController::class, 'penaltyReport'])->name('collection.penalty');
Route::post('v1/testfile', [ForTestController::class, 'testFile'])->name('test.file');
// accounting voucher
Route::post('v1/register', [AuthController::class, 'createUser']);
Route::post('v1/login', [AuthController::class, 'loginUser']);
Route::middleware('token')->group(function () {
    Route::apiResource('v1/codes', AccountingCodeController::class);
    Route::POST('v1/accountingCodeUpdate/{id}',[AccountingCodeController::class, 'updateCode']);
    Route::get('v1/accounting_code_voucher/view/{id}', [AccountingCodeVoucherController::class, 'viewVoucher']);
    Route::apiResource('v1/accounting_code_voucher', AccountingCodeVoucherController::class);
    Route::PUT('v1/signatory/update/status/{signatory}', [SignatoryController::class, 'updateStatus']);
    Route::apiResource('v1/signatory', SignatoryController::class);
    Route::PUT('v1/signatory/update/{id}',[SignatoryController::class, 'update1']);
    // Route::PUT('v1/signatory/deactivated/{id}',[SignatoryController::class, 'deactivated']);
    Route::apiResource('v1/signatory_title', SignatoryTitleController::class);
    Route::apiResource('v1/fund', FundController::class);
    Route::apiResource('v1/voucher', VoucherController::class);
    Route::get('v1/reprint/{id}', [VoucherController::class, 'reprint']);
    Route::get('v1/viewV/{id}', [VoucherController::class, 'viewVoucher']);
    Route::get('v1/viewACV/{id}', [VoucherController::class, 'viewACV']);
    Route::PUT('v1/updateACV/{id}', [VoucherController::class, 'updateACV']);
    Route::post('v1/removeACV/{id}', [VoucherController::class, 'removeACV']);
    Route::PUT('v1/updateVoucher/{id}', [VoucherController::class, 'updateVoucher']);
    Route::DELETE('v1/deleteVoucher/{id}', [VoucherController::class, 'deleteVoucher']);
});
// check latest OR
Route::get('v1/checkLatestOR/{id}', [SalesController::class, 'checkLatestOR'])->name('check.latest.OR');
//end test OR
// accoung voucher end
Route::post('v1/to_server', [ToServerController::class, 'uploadCollection'])->name('server.sync.collection');
Route::post('v1/database/check', [ToServerController::class, 'checkReadySync']);
Route::post('v1/sync/database', [ToServerController::class, 'syncDB']);
Route::post('v1/reports/billing/billed/overide', [BillingReportController::class, 'listOfBilledOveride'])->name('billed.overide');
Route::post('v1/online/meter_reading', [OnlineComController::class, 'onlineRead']);
Route::post('v1/online/account/verify', [OnlineComController::class, 'verifyAccount']);
Route::post('v1/online/print/bill', [OnlineComController::class, 'printOnline']);
// for getting un matched amount power bill
Route::post('v1/powerbill/unmatched', [BillRatesController::class, 'getDifferences']);
Route::post('v1/addewallet/script', [OnlineComController::class, 'script']); 

// HR 
Route::post('v1/hr/login', [HrController::class, 'hr_login']);
Route::post('v1/hr/register', [HrController::class, 'hr_register']);
Route::middleware('hrAuth')->group(function () {
    Route::post('v1/hr/read/dtr', [HrController::class, 'dtr']);
    Route::get('v1/hr/user/details/{id}', [HrController::class, 'userDetails']);
    Route::post('v1/hr/user/change_pass', [HrController::class, 'changePassword']);
});

// Read and Bill getConsumerPerRoute
Route::post('v1/readandbill/consumer/route', [ReadAndBillController::class, 'getConsumerPerRoute']);
Route::post('v1/readandbill/upload/images', [ReadAndBillController::class, 'uploadImages']);
Route::get('v1/readandbill/get/users/{name}', [ReadAndBillController::class, 'getUsers']);